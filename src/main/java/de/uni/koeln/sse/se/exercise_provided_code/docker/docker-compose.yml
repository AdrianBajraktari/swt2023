version: '3.7'

# BONUS: Die Daten der PostgreSQL-Datenbank werden in diesem "Volume" abgelegt,
# das prinzipiell unabh채ngig von den Containern ist. Dies erlaubt das Austauschen des
# DB-Containers, ohne dass die Daten verloren gehen.
volumes:
  postgres:

services:
  web:
    build: .
    image: ueb6-docker-demo
    command: java -jar /app.jar
    environment:
      # Verwende das korrekte Profil f체r Datenbankzugriffe
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"
    depends_on:
      - db
    restart: on-failure

  db:
    container_name: demo-postgres
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      # Daten im Mountpoint des Volumes ablegen
      - PGDATA=/data/postgres
      - POSTGRES_DB=postgres
    volumes:
      # Mountpoint definieren
      - postgres:/data/postgres
    # Der Knoten bezieht sich tats채chlich nur auf Ports der Host-Maschine, ist f체r
    # Networking im Compose-Cluster also irrelevant.
    ports:
      - "15432:5432"
    restart: unless-stopped